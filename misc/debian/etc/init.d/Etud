#! /bin/sh
#
# Etud		startup script for the Ethernet over UDP daemon
#
#		Written by Daniel Lawson <daniel@meta.net.nz>
#
# Version:	$Id: Etud,v 1.3 2002/11/30 04:31:37 mattgbrown Exp $
#
ETUDCONF=/etc/etud.conf
WANDCONF=/usr/local/etc
PIDFILE=/var/run/Etud.pid
PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
DAEMON=/usr/local/sbin/Etud
ARGS="-f $ETUDCONF -p $PIDFILE"
NAME=Etud
DESC="EtherneT over Udp Daemon"
IP=/bin/ip


# Check for the Etud configuration file
if [ ! -f ${ETUDCONF} ]; then
        echo Could not find etud configuration file
        exit
fi
# Check for the wand configuration file
if [ -f ${WANDCONF}/wand.$(hostname -s).conf ]; then
        . ${WANDCONF}/wand.$(hostname -s).conf
else
	echo Could not find wand configuration file
	exit
fi

if [ "x$INTERFACE" = "x" ]; then
       	INTERFACE=tap0
fi

if [ "x$ETHERNET" = "x" ]; then
       	ETHERNET=$(/sbin/ip link show eth0 | grep "link/eth" | cut -b 16-33)
fi

if [ "x$ETHERNET" = "x" ]; then
       	echo Could not determine a valid MAC address.
       	exit;
fi

if [ "x$BROADCAST" = "x" ]; then
       	BROADCAST="192.168.255.255"
fi

if [ "x$BITLENGTH" = "x" ]; then
       	BITLENGTH="16"
fi

test -x $IP || (echo "$IP not found, exiting"; exit 0)

test -x $DAEMON || exit 0

set -e

case "$1" in
  start)
	[ -e /var/run/Etud.ctrl ] && {
        	echo Control file exists, Etud already running?
		exit 1;
	}


	echo  "Starting $DESC: $NAME"
	start-stop-daemon --start --quiet --exec $DAEMON -- $ARGS

	echo " * Configuring link layer"
	$IP link set $INTERFACE arp on multicast off address $ETHERNET mtu 1280

	echo " * Configuring ipv4 layer."
	echo "  * Removing stale entries"
	$IP addr flush dev $INTERFACE
	echo "  * Adding $IFADDR"
	$IP addr add $IFADDR/$BITLENGTH broadcast $BROADCAST dev $INTERFACE
	
	echo " * Bringing the networking interface up."
	$IP link set $INTERFACE up
	echo "."
	;;
  stop)
	echo -n "Stopping $DESC: $NAME "
	start-stop-daemon --stop --quiet --pidfile $PIDFILE  \
		--exec $DAEMON -- $ARGS
	rm $PIDFILE
	rm /var/run/$NAME.ctrl
	$IP link set $INTERFACE down
	echo "."
	;;
  #reload)
	#
	#	If the daemon can reload its config files on the fly
	#	for example by sending it SIGHUP, do it here.
	#
	#	If the daemon responds to changes in its config file
	#	directly anyway, make this a do-nothing entry.
	#
	# echo -n "Reloading $DESC configuration..."
	# start-stop-daemon --stop --signal 1 --quiet --pidfile \
	#	$PIDFILE --exec $DAEMON -- $ARGS
	# echo "done."
  #;;
  restart|force-reload)
	#
	#	If the "reload" option is implemented, move the "force-reload"
	#	option to the "reload" entry above. If not, "force-reload" is
	#	just the same as "restart".
	#

	echo -n "Restarting $DESC: $NAME"
	start-stop-daemon --stop --quiet --pidfile \
		$PIDFILE --exec $DAEMON -- $ARGS
        rm $PIDFILE
        rm /var/run/$NAME.ctrl
        $IP link set $INTERFACE down
	
	sleep 1
	start-stop-daemon --start --quiet --exec $DAEMON -- $ARGS

	echo " * Configuring link layer"
	$IP link set $INTERFACE arp on multicast off address $ETHERNET mtu 1280

	echo " * Configuring ipv4 layer."
	echo "  * Removing stale entries"
	$IP addr flush dev $INTERFACE
	echo "  * Adding $IFADDR"
	$IP addr add $IFADDR/$BITLENGTH broadcast $BROADCAST dev $INTERFACE
	
	echo " * Bringing the networking interface up."
	$IP link set $INTERFACE up
	echo "."
	;;
  *)
	N=/etc/init.d/$NAME
	# echo "Usage: $N {start|stop|restart|reload|force-reload}" >&2
	echo "Usage: $N {start|stop|restart|force-reload}" >&2
	exit 1
	;;
esac

exit 0
